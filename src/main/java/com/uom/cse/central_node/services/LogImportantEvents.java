/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.uom.cse.central_node.services;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum LogImportantEvents implements org.apache.thrift.TEnum {
  LOGON_FAILURES(0),
  SUCCESS_LOGIN(1),
  FIREWALL_EVENTS(2),
  ACCOUNT_USAGE(3),
  GROUP_POLICY_EDITORS(4),
  WINDOWS_DEFENDER_EVENTS(5),
  MOBILE_DEVICE_EVENTS(6),
  SYSTEM_OR_SERVICE_FAILURES(7),
  CLEARING_EVENT_LOGS(8),
  WINDOWS_UPDATE_ERRORS(9),
  APPLICATION_CRASHES(10),
  SOFTWARE_AND_SERVICES_INSTALLATION(11),
  REMOTE_LOGIN_EVENTS(12),
  USER_DEFINED(13),
  PRINTING_SERVICES(14);

  private final int value;

  private LogImportantEvents(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static LogImportantEvents findByValue(int value) { 
    switch (value) {
      case 0:
        return LOGON_FAILURES;
      case 1:
        return SUCCESS_LOGIN;
      case 2:
        return FIREWALL_EVENTS;
      case 3:
        return ACCOUNT_USAGE;
      case 4:
        return GROUP_POLICY_EDITORS;
      case 5:
        return WINDOWS_DEFENDER_EVENTS;
      case 6:
        return MOBILE_DEVICE_EVENTS;
      case 7:
        return SYSTEM_OR_SERVICE_FAILURES;
      case 8:
        return CLEARING_EVENT_LOGS;
      case 9:
        return WINDOWS_UPDATE_ERRORS;
      case 10:
        return APPLICATION_CRASHES;
      case 11:
        return SOFTWARE_AND_SERVICES_INSTALLATION;
      case 12:
        return REMOTE_LOGIN_EVENTS;
      case 13:
        return USER_DEFINED;
      case 14:
        return PRINTING_SERVICES;
      default:
        return null;
    }
  }
}
