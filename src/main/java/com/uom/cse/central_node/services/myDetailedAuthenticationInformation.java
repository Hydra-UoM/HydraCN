/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.uom.cse.central_node.services;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-1-25")
public class myDetailedAuthenticationInformation implements org.apache.thrift.TBase<myDetailedAuthenticationInformation, myDetailedAuthenticationInformation._Fields>, java.io.Serializable, Cloneable, Comparable<myDetailedAuthenticationInformation> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("myDetailedAuthenticationInformation");

  private static final org.apache.thrift.protocol.TField LOGON__PROCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("Logon_Process", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField AUTHENTICATION__PACKAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("Authentication_Package", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField TRANSITED__SERVICES_FIELD_DESC = new org.apache.thrift.protocol.TField("Transited_Services", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField PACKAGE__NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("Package_Name", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField KEY__LENGTH_FIELD_DESC = new org.apache.thrift.protocol.TField("Key_Length", org.apache.thrift.protocol.TType.STRING, (short)5);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new myDetailedAuthenticationInformationStandardSchemeFactory());
    schemes.put(TupleScheme.class, new myDetailedAuthenticationInformationTupleSchemeFactory());
  }

  public String Logon_Process; // required
  public String Authentication_Package; // required
  public String Transited_Services; // required
  public String Package_Name; // required
  public String Key_Length; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    LOGON__PROCESS((short)1, "Logon_Process"),
    AUTHENTICATION__PACKAGE((short)2, "Authentication_Package"),
    TRANSITED__SERVICES((short)3, "Transited_Services"),
    PACKAGE__NAME((short)4, "Package_Name"),
    KEY__LENGTH((short)5, "Key_Length");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // LOGON__PROCESS
          return LOGON__PROCESS;
        case 2: // AUTHENTICATION__PACKAGE
          return AUTHENTICATION__PACKAGE;
        case 3: // TRANSITED__SERVICES
          return TRANSITED__SERVICES;
        case 4: // PACKAGE__NAME
          return PACKAGE__NAME;
        case 5: // KEY__LENGTH
          return KEY__LENGTH;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.LOGON__PROCESS, new org.apache.thrift.meta_data.FieldMetaData("Logon_Process", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUTHENTICATION__PACKAGE, new org.apache.thrift.meta_data.FieldMetaData("Authentication_Package", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TRANSITED__SERVICES, new org.apache.thrift.meta_data.FieldMetaData("Transited_Services", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PACKAGE__NAME, new org.apache.thrift.meta_data.FieldMetaData("Package_Name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.KEY__LENGTH, new org.apache.thrift.meta_data.FieldMetaData("Key_Length", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(myDetailedAuthenticationInformation.class, metaDataMap);
  }

  public myDetailedAuthenticationInformation() {
  }

  public myDetailedAuthenticationInformation(
    String Logon_Process,
    String Authentication_Package,
    String Transited_Services,
    String Package_Name,
    String Key_Length)
  {
    this();
    this.Logon_Process = Logon_Process;
    this.Authentication_Package = Authentication_Package;
    this.Transited_Services = Transited_Services;
    this.Package_Name = Package_Name;
    this.Key_Length = Key_Length;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public myDetailedAuthenticationInformation(myDetailedAuthenticationInformation other) {
    if (other.isSetLogon_Process()) {
      this.Logon_Process = other.Logon_Process;
    }
    if (other.isSetAuthentication_Package()) {
      this.Authentication_Package = other.Authentication_Package;
    }
    if (other.isSetTransited_Services()) {
      this.Transited_Services = other.Transited_Services;
    }
    if (other.isSetPackage_Name()) {
      this.Package_Name = other.Package_Name;
    }
    if (other.isSetKey_Length()) {
      this.Key_Length = other.Key_Length;
    }
  }

  public myDetailedAuthenticationInformation deepCopy() {
    return new myDetailedAuthenticationInformation(this);
  }

  @Override
  public void clear() {
    this.Logon_Process = null;
    this.Authentication_Package = null;
    this.Transited_Services = null;
    this.Package_Name = null;
    this.Key_Length = null;
  }

  public String getLogon_Process() {
    return this.Logon_Process;
  }

  public myDetailedAuthenticationInformation setLogon_Process(String Logon_Process) {
    this.Logon_Process = Logon_Process;
    return this;
  }

  public void unsetLogon_Process() {
    this.Logon_Process = null;
  }

  /** Returns true if field Logon_Process is set (has been assigned a value) and false otherwise */
  public boolean isSetLogon_Process() {
    return this.Logon_Process != null;
  }

  public void setLogon_ProcessIsSet(boolean value) {
    if (!value) {
      this.Logon_Process = null;
    }
  }

  public String getAuthentication_Package() {
    return this.Authentication_Package;
  }

  public myDetailedAuthenticationInformation setAuthentication_Package(String Authentication_Package) {
    this.Authentication_Package = Authentication_Package;
    return this;
  }

  public void unsetAuthentication_Package() {
    this.Authentication_Package = null;
  }

  /** Returns true if field Authentication_Package is set (has been assigned a value) and false otherwise */
  public boolean isSetAuthentication_Package() {
    return this.Authentication_Package != null;
  }

  public void setAuthentication_PackageIsSet(boolean value) {
    if (!value) {
      this.Authentication_Package = null;
    }
  }

  public String getTransited_Services() {
    return this.Transited_Services;
  }

  public myDetailedAuthenticationInformation setTransited_Services(String Transited_Services) {
    this.Transited_Services = Transited_Services;
    return this;
  }

  public void unsetTransited_Services() {
    this.Transited_Services = null;
  }

  /** Returns true if field Transited_Services is set (has been assigned a value) and false otherwise */
  public boolean isSetTransited_Services() {
    return this.Transited_Services != null;
  }

  public void setTransited_ServicesIsSet(boolean value) {
    if (!value) {
      this.Transited_Services = null;
    }
  }

  public String getPackage_Name() {
    return this.Package_Name;
  }

  public myDetailedAuthenticationInformation setPackage_Name(String Package_Name) {
    this.Package_Name = Package_Name;
    return this;
  }

  public void unsetPackage_Name() {
    this.Package_Name = null;
  }

  /** Returns true if field Package_Name is set (has been assigned a value) and false otherwise */
  public boolean isSetPackage_Name() {
    return this.Package_Name != null;
  }

  public void setPackage_NameIsSet(boolean value) {
    if (!value) {
      this.Package_Name = null;
    }
  }

  public String getKey_Length() {
    return this.Key_Length;
  }

  public myDetailedAuthenticationInformation setKey_Length(String Key_Length) {
    this.Key_Length = Key_Length;
    return this;
  }

  public void unsetKey_Length() {
    this.Key_Length = null;
  }

  /** Returns true if field Key_Length is set (has been assigned a value) and false otherwise */
  public boolean isSetKey_Length() {
    return this.Key_Length != null;
  }

  public void setKey_LengthIsSet(boolean value) {
    if (!value) {
      this.Key_Length = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case LOGON__PROCESS:
      if (value == null) {
        unsetLogon_Process();
      } else {
        setLogon_Process((String)value);
      }
      break;

    case AUTHENTICATION__PACKAGE:
      if (value == null) {
        unsetAuthentication_Package();
      } else {
        setAuthentication_Package((String)value);
      }
      break;

    case TRANSITED__SERVICES:
      if (value == null) {
        unsetTransited_Services();
      } else {
        setTransited_Services((String)value);
      }
      break;

    case PACKAGE__NAME:
      if (value == null) {
        unsetPackage_Name();
      } else {
        setPackage_Name((String)value);
      }
      break;

    case KEY__LENGTH:
      if (value == null) {
        unsetKey_Length();
      } else {
        setKey_Length((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case LOGON__PROCESS:
      return getLogon_Process();

    case AUTHENTICATION__PACKAGE:
      return getAuthentication_Package();

    case TRANSITED__SERVICES:
      return getTransited_Services();

    case PACKAGE__NAME:
      return getPackage_Name();

    case KEY__LENGTH:
      return getKey_Length();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case LOGON__PROCESS:
      return isSetLogon_Process();
    case AUTHENTICATION__PACKAGE:
      return isSetAuthentication_Package();
    case TRANSITED__SERVICES:
      return isSetTransited_Services();
    case PACKAGE__NAME:
      return isSetPackage_Name();
    case KEY__LENGTH:
      return isSetKey_Length();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof myDetailedAuthenticationInformation)
      return this.equals((myDetailedAuthenticationInformation)that);
    return false;
  }

  public boolean equals(myDetailedAuthenticationInformation that) {
    if (that == null)
      return false;

    boolean this_present_Logon_Process = true && this.isSetLogon_Process();
    boolean that_present_Logon_Process = true && that.isSetLogon_Process();
    if (this_present_Logon_Process || that_present_Logon_Process) {
      if (!(this_present_Logon_Process && that_present_Logon_Process))
        return false;
      if (!this.Logon_Process.equals(that.Logon_Process))
        return false;
    }

    boolean this_present_Authentication_Package = true && this.isSetAuthentication_Package();
    boolean that_present_Authentication_Package = true && that.isSetAuthentication_Package();
    if (this_present_Authentication_Package || that_present_Authentication_Package) {
      if (!(this_present_Authentication_Package && that_present_Authentication_Package))
        return false;
      if (!this.Authentication_Package.equals(that.Authentication_Package))
        return false;
    }

    boolean this_present_Transited_Services = true && this.isSetTransited_Services();
    boolean that_present_Transited_Services = true && that.isSetTransited_Services();
    if (this_present_Transited_Services || that_present_Transited_Services) {
      if (!(this_present_Transited_Services && that_present_Transited_Services))
        return false;
      if (!this.Transited_Services.equals(that.Transited_Services))
        return false;
    }

    boolean this_present_Package_Name = true && this.isSetPackage_Name();
    boolean that_present_Package_Name = true && that.isSetPackage_Name();
    if (this_present_Package_Name || that_present_Package_Name) {
      if (!(this_present_Package_Name && that_present_Package_Name))
        return false;
      if (!this.Package_Name.equals(that.Package_Name))
        return false;
    }

    boolean this_present_Key_Length = true && this.isSetKey_Length();
    boolean that_present_Key_Length = true && that.isSetKey_Length();
    if (this_present_Key_Length || that_present_Key_Length) {
      if (!(this_present_Key_Length && that_present_Key_Length))
        return false;
      if (!this.Key_Length.equals(that.Key_Length))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_Logon_Process = true && (isSetLogon_Process());
    list.add(present_Logon_Process);
    if (present_Logon_Process)
      list.add(Logon_Process);

    boolean present_Authentication_Package = true && (isSetAuthentication_Package());
    list.add(present_Authentication_Package);
    if (present_Authentication_Package)
      list.add(Authentication_Package);

    boolean present_Transited_Services = true && (isSetTransited_Services());
    list.add(present_Transited_Services);
    if (present_Transited_Services)
      list.add(Transited_Services);

    boolean present_Package_Name = true && (isSetPackage_Name());
    list.add(present_Package_Name);
    if (present_Package_Name)
      list.add(Package_Name);

    boolean present_Key_Length = true && (isSetKey_Length());
    list.add(present_Key_Length);
    if (present_Key_Length)
      list.add(Key_Length);

    return list.hashCode();
  }

  @Override
  public int compareTo(myDetailedAuthenticationInformation other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetLogon_Process()).compareTo(other.isSetLogon_Process());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLogon_Process()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Logon_Process, other.Logon_Process);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuthentication_Package()).compareTo(other.isSetAuthentication_Package());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuthentication_Package()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Authentication_Package, other.Authentication_Package);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTransited_Services()).compareTo(other.isSetTransited_Services());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTransited_Services()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Transited_Services, other.Transited_Services);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPackage_Name()).compareTo(other.isSetPackage_Name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPackage_Name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Package_Name, other.Package_Name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetKey_Length()).compareTo(other.isSetKey_Length());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetKey_Length()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Key_Length, other.Key_Length);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("myDetailedAuthenticationInformation(");
    boolean first = true;

    sb.append("Logon_Process:");
    if (this.Logon_Process == null) {
      sb.append("null");
    } else {
      sb.append(this.Logon_Process);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("Authentication_Package:");
    if (this.Authentication_Package == null) {
      sb.append("null");
    } else {
      sb.append(this.Authentication_Package);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("Transited_Services:");
    if (this.Transited_Services == null) {
      sb.append("null");
    } else {
      sb.append(this.Transited_Services);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("Package_Name:");
    if (this.Package_Name == null) {
      sb.append("null");
    } else {
      sb.append(this.Package_Name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("Key_Length:");
    if (this.Key_Length == null) {
      sb.append("null");
    } else {
      sb.append(this.Key_Length);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class myDetailedAuthenticationInformationStandardSchemeFactory implements SchemeFactory {
    public myDetailedAuthenticationInformationStandardScheme getScheme() {
      return new myDetailedAuthenticationInformationStandardScheme();
    }
  }

  private static class myDetailedAuthenticationInformationStandardScheme extends StandardScheme<myDetailedAuthenticationInformation> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, myDetailedAuthenticationInformation struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // LOGON__PROCESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.Logon_Process = iprot.readString();
              struct.setLogon_ProcessIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // AUTHENTICATION__PACKAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.Authentication_Package = iprot.readString();
              struct.setAuthentication_PackageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TRANSITED__SERVICES
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.Transited_Services = iprot.readString();
              struct.setTransited_ServicesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PACKAGE__NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.Package_Name = iprot.readString();
              struct.setPackage_NameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // KEY__LENGTH
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.Key_Length = iprot.readString();
              struct.setKey_LengthIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, myDetailedAuthenticationInformation struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.Logon_Process != null) {
        oprot.writeFieldBegin(LOGON__PROCESS_FIELD_DESC);
        oprot.writeString(struct.Logon_Process);
        oprot.writeFieldEnd();
      }
      if (struct.Authentication_Package != null) {
        oprot.writeFieldBegin(AUTHENTICATION__PACKAGE_FIELD_DESC);
        oprot.writeString(struct.Authentication_Package);
        oprot.writeFieldEnd();
      }
      if (struct.Transited_Services != null) {
        oprot.writeFieldBegin(TRANSITED__SERVICES_FIELD_DESC);
        oprot.writeString(struct.Transited_Services);
        oprot.writeFieldEnd();
      }
      if (struct.Package_Name != null) {
        oprot.writeFieldBegin(PACKAGE__NAME_FIELD_DESC);
        oprot.writeString(struct.Package_Name);
        oprot.writeFieldEnd();
      }
      if (struct.Key_Length != null) {
        oprot.writeFieldBegin(KEY__LENGTH_FIELD_DESC);
        oprot.writeString(struct.Key_Length);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class myDetailedAuthenticationInformationTupleSchemeFactory implements SchemeFactory {
    public myDetailedAuthenticationInformationTupleScheme getScheme() {
      return new myDetailedAuthenticationInformationTupleScheme();
    }
  }

  private static class myDetailedAuthenticationInformationTupleScheme extends TupleScheme<myDetailedAuthenticationInformation> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, myDetailedAuthenticationInformation struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetLogon_Process()) {
        optionals.set(0);
      }
      if (struct.isSetAuthentication_Package()) {
        optionals.set(1);
      }
      if (struct.isSetTransited_Services()) {
        optionals.set(2);
      }
      if (struct.isSetPackage_Name()) {
        optionals.set(3);
      }
      if (struct.isSetKey_Length()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetLogon_Process()) {
        oprot.writeString(struct.Logon_Process);
      }
      if (struct.isSetAuthentication_Package()) {
        oprot.writeString(struct.Authentication_Package);
      }
      if (struct.isSetTransited_Services()) {
        oprot.writeString(struct.Transited_Services);
      }
      if (struct.isSetPackage_Name()) {
        oprot.writeString(struct.Package_Name);
      }
      if (struct.isSetKey_Length()) {
        oprot.writeString(struct.Key_Length);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, myDetailedAuthenticationInformation struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.Logon_Process = iprot.readString();
        struct.setLogon_ProcessIsSet(true);
      }
      if (incoming.get(1)) {
        struct.Authentication_Package = iprot.readString();
        struct.setAuthentication_PackageIsSet(true);
      }
      if (incoming.get(2)) {
        struct.Transited_Services = iprot.readString();
        struct.setTransited_ServicesIsSet(true);
      }
      if (incoming.get(3)) {
        struct.Package_Name = iprot.readString();
        struct.setPackage_NameIsSet(true);
      }
      if (incoming.get(4)) {
        struct.Key_Length = iprot.readString();
        struct.setKey_LengthIsSet(true);
      }
    }
  }

}

